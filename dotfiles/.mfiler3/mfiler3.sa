# My mfiler3.sa
# Parameters  #{{{1

print $(export MF3HOME)/history | export HISTORY_FILE
print 1000 | export HISTORY_SIZE
print $(export HOME)/.Trash/ | export TRASHBOX_DIR

print 'print "mfiler3 $(export VERSION) with saphire $(export SAPHIRE_VERSION)"' | export PROMPT

print 1 | export CMDLINE_COLOR
print 1 | export CMDLINE_ESCAPE_KEY_ENABLE

print 0 | export VIEW_ADD_STAR_EXE
print 0 | export VIEW_DIVIDE_EXTENSION
print 0 | export VIEW_FOCUSBACK
print 0 | export VIEW_GROUP
print 0 | export VIEW_MTIME
print 0 | export VIEW_NLINK
print 0 | export VIEW_OWNER
print 0 | export VIEW_PAGE
print 0 | export VIEW_PERMISSION
print 1 | export VIEW_SIZE

print Normal | export VIEW_FILE_SIZE
print 2pain | export VIEW_OPTION

export ma_cyan | export COLOR_DIR
export ma_green | export COLOR_EXE
export ma_magenta | export COLOR_LINK
export ma_yellow | export COLOR_MARK

print name | export SORT_KIND
print 1 | export SORT_DIR_UP
print 0 | export SORT_MARK_UP




# Functions  #{{{1
def cursor (  #{{{2
  file_name $(cursor_num)
)




def cursor_move_loop (  #{{{2
  file_num | \* 2 | + $(cursor_num) | + $(ary ARGV 0) | mod $(file_num) | var pos
  cursor_move $(var pos)
)




def extname_length (  #{{{2
  | extname | var ext
  if(var ext | [ = '' ] || var ext | length | [ -gt 4 ]) (
    print 0
  ) else (
    var ext | length | + 1
  )
)




def find_file (  #{{{2
  find . @@(ary ARGV) | scan './(.+)' | vd
)




def glob_mark (  #{{{2
  for file in @@(ary ARGV) (
    mark $(var file) 1
  )
)




def open_file (  #{{{2
  split $(ary ARGV 0) '\.' | lc | ary xs

  if(length xs | [ -lt 2 ]) (
    external -q "$$(export PAGER) $(ary ARGV 0)"
    return
  )

  case $(ary xs -1) '^gz$' (
    if(ary xs -2 | [ = 'tar' ]) (
      external -q "tar tvfz $(ary ARGV 0) | $$(export PAGER)"
      break
    )
  ) '^bz2$' (
    if(ary xs -2 | [ = 'tar' ]) (
      external -q "tar tvfj $(ary ARGV 0) | $$(export PAGER)"
      break
    )
  ) '^xz$' (
    if(ary xs -2 | [ = 'tar' ]) (
      external -q "tar tvfJ $(ary ARGV 0) | $$(export PAGER)"
      break
    )
  ) '^lzma$' (
    if(ary xs -2 | [ = 'tar' ]) (
      external -q "tar tvfa $(ary ARGV 0) | $$(export PAGER)"
      break
    )
  ) '^tgz$' (
    external -q "tar tvfz $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^tbz$' (
    external -q "tar tvfj $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^txz$' (
    external -q "tar tvfJ $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^tlz$' (
    external -q "tar tvfa $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^7z$' (
    external -q "7z l $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^cab$' (
    external -q "cabextract -l $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^lzh$' (
    external -q "lha l $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^rar$' (
    external -q "unrar vb $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^zip$' (
    external -q "zipinfo -O cp932 $(ary ARGV 0) | $$(export PAGER)"
    break
  ) '^(aac|asf|avi|flv|mkv|mov|mp3|mp4|mpe?g|ogg|ogv|rm|wav|webm|wma|wmv)$' (
    external -q "mpv -quiet $(ary ARGV 0)"
    break
  ) '^(bmp|gif|heic|jpe?g|jpg_orig|png|webp)$' (
    external -q "feh -. $(ary ARGV 0)"
    break
  ) '.*' (
    external -q "$$(export PAGER) $(ary ARGV 0)"
    break
  )
)




def pack (  #{{{2
  ary ARGV 0 | var ext
  ary ARGV 1 | var command

  markfiles | lines 0 | chomp | var fst
  print $(path -d sdir)$(var fst).$(var ext) | var dest

  length ext | + 17 | var pos
  cmdline "$$(var command) $$(var dest | q) @@(markfiles)" -$(var pos)

  reread -d all
)




def q (  #{{{2
  if(ary ARGV | length -nl -L | [ = 0 ]) (
    | each ( | printf "'%s'" | pomch ) | chomp
  ) else (
    foreach @@(ary ARGV) ( | printf "'%s'" | pomch ) | join ' ' | chomp
  )
)




def regex_mark (  #{{{2
  for file in @@(allfiles) (
    if(var file | [ -re $(ary ARGV 0) ]) (
      mark -t $(var file) 1
    )
  )
)




def regex_rename (  #{{{2
  for file in @@(markfiles) (
    if(var file | [ -re $(ary ARGV 0) ]) (
      puts "$$(var file) -> $$(var file | sub $(ary ARGV 0) ( ary ARGV 1 ))"
    ) else (
      puts "$$(var file)"
    )
  ) | $$(export PAGER)

  minitscr
  if(mchoise "rename ok?" no yes | [ = yes ]) (
    mendwin
    mclear_immediately

    for file in @@(markfiles) (
      if(var file | [ -re $(ary ARGV 0) ]) (
        mrename $(var file) $(var file | sub $(ary ARGV 0) ( ary ARGV 1 ))
      )
    )
  )

  mclear_immediately
  reread
)




def scroll_left (  #{{{2
  if(row | [ != 0 ]) (
    cursor_move -$(line_max)
  )
)




def scroll_right (  #{{{2
  if(row | [ != $(row_max | - 1) ]) (
    cursor_move +$(line_max)
  )
)




def toggle (  #{{{2
  | if( | [ = 0 ]) (
      print 1
  ) else (
      print 0
  )
)




# Menu  #{{{1
defmenu attribute  #{{{2
addmenu attribute 'ch(m)od (permission)'              $(export key_m) 'cmdline "chmod  @@(markfiles)" 6'
addmenu attribute 'ch(o)wn (owner)'                   $(export key_o) 'cmdline "chown  @@(markfiles)" 6'
addmenu attribute 'ch(g)rp (group)'                   $(export key_g) 'cmdline "chgrp  @@(markfiles)" 6'
addmenu attribute 'ch(M)od -R (permission recursive)' $(export key_M) 'cmdline "chmod -R  @@(markfiles)" 9'
addmenu attribute 'ch(O)wn -R (owner recursive)'      $(export key_O) 'cmdline "chown -R  @@(markfiles)" 9'
addmenu attribute 'ch(G)rp -R (group recursive)'      $(export key_G) 'cmdline "chgrp -R  @@(markfiles)" 9'
addmenu attribute 'm(a)ttr (permission and date)'     $(export key_a) 'mattr @@(markfiles); reread -d adir'




defmenu jump  #{{{2
addmenu jump '(d)esktop'   $(export key_d) "mcd $(export HOME)/Desktop"
addmenu jump 'D(o)cuments' $(export key_o) "mcd $(export HOME)/Documents"
addmenu jump 'Dow(n)loads' $(export key_n) "mcd $(export HOME)/Downloads"
addmenu jump '(m)usic'     $(export key_m) "mcd $(export HOME)/Music"
addmenu jump '(p)ictures'  $(export key_p) "mcd $(export HOME)/Pictures"
addmenu jump '(r)adio'     $(export key_r) "mcd $(export HOME)/Radio"
addmenu jump '(v)ideos'    $(export key_v) "mcd $(export HOME)/Videos"
addmenu jump '(w)orking'   $(export key_w) "mcd $(export HOME)/working"
addmenu jump '.(V)im'      $(export key_V) "mcd $(export HOME)/.vim"
addmenu jump '.(W)ine'     $(export key_W) "mcd $(export HOME)/.wine"
addmenu jump '(e)tc'       $(export key_e) "mcd /etc"
addmenu jump 'mn(t)'       $(export key_t) "mcd /mnt"
addmenu jump '(u)sr'       $(export key_u) "mcd /usr"
addmenu jump '(l)ocal'     $(export key_l) "mcd /usr/local"




defmenu pack  #{{{2
addmenu pack '(z)ip'      $(export key_z) 'pack zip "zip -r"'
addmenu pack '(0)zip'     $(export key_0) 'pack zip "zip -0rj"'
addmenu pack '(7)z'       $(export key_7) 'pack 7z "7z a"'
addmenu pack 'tar.(g)z'   $(export key_g) 'pack tar.gz "tar cvfz"'
addmenu pack 'tar.(b)z2'  $(export key_b) 'pack tar.bz2 "tar cvfj"'
addmenu pack 'tar.(x)z'   $(export key_x) 'pack tar.xz "tar cvfJ"'
addmenu pack 'tar.(l)zma' $(export key_l) 'pack tar.lzma "tar cvfa"'




defmenu sort_and_mask  #{{{2
addmenu sort_and_mask '(n)ame'               $(export key_n) 'print name | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(N)ame reverse'       $(export key_N) 'print name_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(e)xtension'          $(export key_e) 'print ext | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(E)xtension reverse'  $(export key_E) 'print ext_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(s)ize'               $(export key_s) 'print size | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(S)ize reverse'       $(export key_S) 'print size_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(t)ime'               $(export key_t) 'print time | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(T)ime reverse'       $(export key_T) 'print time_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(u)ser'               $(export key_u) 'print user | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(U)ser reverse'       $(export key_U) 'print user_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(g)roup'              $(export key_g) 'print group | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(G)roup reverse'      $(export key_G) 'print group_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(p)ermission'         $(export key_p) 'print perm | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(P)ermission reverse' $(export key_P) 'print perm_rev | export SORT_KIND; reread -d all'
addmenu sort_and_mask '(r)andom'             $(export key_r) 'print random | export SORT_KIND; reread -d all'
addmenu sort_and_mask 'none (0)'             $(export key_0) 'print none | export SORT_KIND; reread -d all'
addmenu sort_and_mask 'toggle (d)ir up'      $(export key_d) 'toggle SORT_DIR_UP | export SORT_DIR_UP; reread -d all'
addmenu sort_and_mask 'toggle (m)ark up'     $(export key_m) 'toggle SORT_MARK_UP | export SORT_MARK_UP; reread -d all'
addmenu sort_and_mask '(M)ask'               $(export key_M) 'cmdline -q "mask -dotdir 0; mask ''" -2'




defmenu sudo  #{{{2
addmenu sudo 'sudo (c)opy'      $(export key_c) 'cmdline "sudo cp -vr @@(markfiles) $$(path -d sdir | q)" -2'
addmenu sudo 'sudo (m)ove'      $(export key_m) 'cmdline "sudo mv -v @@(markfiles) $$(path -d sdir | q)" -2'
addmenu sudo 'sudo (l)ink'      $(export key_l) 'cmdline "sudo ln -vs @@(markfiles) $$(path -d sdir | q)" -2'
addmenu sudo 'sudo (d)elete'    $(export key_d) 'cmdline "sudo rm -vr @@(markfiles)" -1'
addmenu sudo 'sudo (r)ename'    $(export key_r) 'cmdline "sudo mv -v $$(cursor | q) $$(cursor | q)" -$(cursor | extname_length | + 2)'
addmenu sudo 'sudo m(k)dir'     $(export key_k) 'cmdline "sudo mkdir -p '\'\''" -2'
addmenu sudo 'sudo (n)ewfile'   $(export key_n) 'cmdline "sudo touch '\'\''" -2'
addmenu sudo 'sudo (a)ttribute' $(export key_a) 'mmenu sudo_attribute'




defmenu sudo_attribute  #{{{2
addmenu sudo_attribute 'sudo ch(m)od (permission)'              $(export key_m) 'cmdline "sudo chmod  @@(markfiles)" 11'
addmenu sudo_attribute 'sudo ch(o)wn (owner)'                   $(export key_o) 'cmdline "sudo chown  @@(markfiles)" 11'
addmenu sudo_attribute 'sudo ch(g)rp (group)'                   $(export key_g) 'cmdline "sudo chgrp  @@(markfiles)" 11'
addmenu sudo_attribute 'sudo ch(M)od -R (permission recursive)' $(export key_M) 'cmdline "sudo chmod -R  @@(markfiles)" 14'
addmenu sudo_attribute 'sudo ch(O)wn -R (owner recursive)'      $(export key_O) 'cmdline "sudo chown -R  @@(markfiles)" 14'
addmenu sudo_attribute 'sudo ch(G)rp -R (group recursive)'      $(export key_G) 'cmdline "sudo chgrp -R  @@(markfiles)" 14'
addmenu sudo_attribute 'sudo m(a)ttr (permission and date)'     $(export key_a) 'sudo mattr @@(markfiles); reread -d adir'




defmenu view  #{{{2
addmenu view '2dir (a)ll'                       $(export key_a) 'print 2pain | export VIEW_OPTION'
addmenu view '1dir(1)'                          $(export key_1) 'print 1pain | export VIEW_OPTION'
addmenu view '1dir(2)'                          $(export key_2) 'print 1pain2 | export VIEW_OPTION'
addmenu view '1dir(3)'                          $(export key_3) 'print 1pain3 | export VIEW_OPTION'
addmenu view '1dir(5)'                          $(export key_5) 'print 1pain5 | export VIEW_OPTION'
addmenu view 'toggle (s)ize'                    $(export key_s) 'toggle VIEW_SIZE | export VIEW_SIZE'
addmenu view 'toggle m(t)ime'                   $(export key_t) 'toggle VIEW_MTIME | export VIEW_MTIME'
addmenu view 'toggle (u)ser'                    $(export key_u) 'toggle VIEW_OWNER | export VIEW_OWNER'
addmenu view 'toggle (g)roup'                   $(export key_g) 'toggle VIEW_GROUP | export VIEW_GROUP'
addmenu view 'toggle nl(i)nk'                   $(export key_i) 'toggle VIEW_NLINK | export VIEW_NLINK'
addmenu view 'toggle (p)ermission'              $(export key_p) 'toggle VIEW_PERMISSION | export VIEW_PERMISSION'
addmenu view 'toggle adding star to e(X)e file' $(export key_X) 'toggle VIEW_ADD_STAR_EXE | export VIEW_ADD_STAR_EXE'
addmenu view 'toggle fname (d)vide extension'   $(export key_d) 'toggle VIEW_DIVIDE_EXTENSION | export VIEW_DIVIDE_EXTENSION'
addmenu view 'toggle fname (f)ocus back'        $(export key_f) 'toggle VIEW_FOCUSBACK | export VIEW_FOCUSBACK'
addmenu view 'toggle (P)age view way'           $(export key_P) 'toggle VIEW_PAGE | export VIEW_PAGE'
addmenu view 'fil(e) size view way Normal'      $(export key_e) 'print Normal | export VIEW_FILE_SIZE'
addmenu view 'fil(E) size view way Human'       $(export key_E) 'print Human | export VIEW_FILE_SIZE'
addmenu view 'file (S)ize view way Plane'       $(export key_P) 'print Plane | export VIEW_FILE_SIZE'




# Keycommand  #{{{1
# Cursor  #{{{2

keycommand2 $(export key_up)     ( cursor_move_loop -1 )
keycommand2 $(export key_down)   ( cursor_move_loop 1 )
keycommand2 $(export key_k)      ( cursor_move_loop -1 )
keycommand2 $(export key_j)      ( cursor_move_loop 1 )
keycommand2 $(export key_ctrl_p) ( cursor_move_loop -1 )
keycommand2 $(export key_ctrl_n) ( cursor_move_loop 1 )

keycommand2 $(export key_G) ( cursor_move $(file_num) )
keycommand2 $(export key_g) ( cursor_move 0 )

keycommand2 $(export key_pageup)   ( cursor_move -10 )
keycommand2 $(export key_pagedown) ( cursor_move +10 )
keycommand2 $(export key_ctrl_d)   ( cursor_move +10 )
keycommand2 $(export key_ctrl_u)   ( cursor_move -10 )

keycommand2 $(export key_space) (
  mark -t -n $(cursor_num)
  cursor_move +1
)




# File and Directory  #{{{2

keycommand2 $(export key_enter) -f .directory ( mcd $(cursor) )
keycommand2 $(export key_l)     -f .directory ( mcd $(cursor) )
keycommand2 $(export key_enter) -f .mark (
  ([ -d $(cursor) ] && mcd $(cursor)) || open_file $(cursor)
)
keycommand2 $(export key_enter) -f .link (
  ([ -d $(cursor) ] && mcd $(cursor)) || open_file $(cursor)
)
keycommand2 $(export key_l) -f .mark (
  ([ -d $(cursor) ] && mcd $(cursor)) || open_file $(cursor)
)
keycommand2 $(export key_l) -f .link (
  ([ -d $(cursor) ] && mcd $(cursor)) || open_file $(cursor)
)
keycommand2 $(export key_enter) ( open_file $(cursor) )
keycommand2 $(export key_l)     ( open_file $(cursor) )

keycommand2 $(export key_x) -f .execute ( cmdline "./$(cursor) " -1 )
keycommand2 $(export key_x) -f .exe     ( cmdline "wine ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .hs      ( cmdline "runghc ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .msi     ( cmdline "wine msiexec /i ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .pl      ( cmdline "perl ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .py      ( cmdline "python ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .rb      ( cmdline "ruby ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .scm     ( cmdline "gosh ./$(cursor) " -1 )
keycommand2 $(export key_x) -f .sh      ( cmdline "sh ./$(cursor) " -1 )
keycommand2 $(export key_x)             ( cmdline " ./$(cursor)" 0 )

keycommand2 $(export key_backspace) ( mcd .. )
keycommand2 $(export key_h)         ( mcd .. )
keycommand2 $(export key_tilda)     ( mcd ~ )
keycommand2 $(export key_backslash) ( mcd / )
keycommand2 $(export key_T)         ( mcd $(export TRASHBOX_DIR) )

keycommand2 $(export key_ctrl_k) ( mcd - )
keycommand2 $(export key_ctrk_j) ( mcd + )




# Operation  #{{{2

keycommand2 $(export key_r) -f .mark (
  cmdline -q "regex_rename '' ''" -5
)
keycommand2 $(export key_r) (
  cursor | extname_length | + 2 | var pos
  cmdline -q "mrename -c -r $$(cursor | q) $$(cursor | q)" -$(var pos)
)

keycommand2 $(export key_L) ( mln $(path -d sdir) )
keycommand2 $(export key_b) ( cmdline -q "mbackup -p $$(cursor | q)" -2 )
keycommand2 $(export key_c) ( mcp -p $(path -d sdir) )
keycommand2 $(export key_m) ( mmv -p $(path -d sdir) )

keycommand2 $(export key_D) -f .mark (
  mchoise "DELETE file ok?" yes no | [ = yes ] && mrm
)
keycommand2 $(export key_d) -f .mark (
  mchoise "move file to trashbox ok?" yes no | [ = yes ] && trash-put -f -- @@(markfiles) && reread -d all
)

keycommand2 $(export key_I) -f .mark ( external "du --si -sc @@(markfiles)" )
keycommand2 $(export key_I)          ( external "du --si -s $(cursor)" )
keycommand2 $(export key_i) -f .mark ( external "du -hsc @@(markfiles)" )
keycommand2 $(export key_i)          ( external "du -hs $(cursor)" )

keycommand2 $(export key_K) ( cmdline "mkdir -p ''" -2 )
keycommand2 $(export key_n) ( cmdline "touch ''" -2 )

keycommand2 $(export key_e) ( external -q "$EDITOR --remote-tab-silent $(cursor)" )

keycommand2 $(export key_v) ( external -q "$$(export PAGER) $(cursor)" )
keycommand2 $(export key_B) ( external -q "hex $(cursor) | $$(export PAGER)" )

keycommand2 $(export key_F) ( cmdline -q "find_file -name ''" -2 )
keycommand2 $(export key_f) ( cmdline -q "mask -dotdir 0; mask ''" -2 )

keycommand2 $(export key_ctrl_g) ( external "puts $(cursor)" )

keycommand2 $(export key_Y) ( external -q "print $(path)$(cursor) | xclip -i -s clipboard" )
keycommand2 $(export key_y) ( external -q "print $(cursor) | xclip -i -s clipboard" )




# Extract  #{{{2

keycommand2 $(export key_u) -f .bz2 (
  if(cursor | index -q tar.bz2) (
    cmdline "tar xvfj $$(cursor | q) -C $$(path -d sdir | q)" -2
  ) else (
    cmdline "bzip2 -d $$(cursor | q)" -2
  )
)
keycommand2 $(export key_u) -f .gz (
  if(cursor | index -q tar.gz) (
    cmdline "tar xvfz $$(cursor | q) -C $$(path -d sdir | q)" -2
  ) else (
    cmdline "gzip -d $$(cursor | q)" -2
  )
)
keycommand2 $(export key_u) -f .lzma (
  if(cursor | index -q tar.lzma) (
    cmdline "tar xvfa $$(cursor | q) -C $$(path -d sdir | q)" -2
  ) else (
    cmdline "lzma -d $$(cursor | q)" -2
  )
)
keycommand2 $(export key_u) -f .xz (
  if(cursor | index -q tar.xz) (
    cmdline "tar xvfJ $$(cursor | q) -C $$(path -d sdir | q)" -2
  ) else (
    cmdline "xz -d $$(cursor | q)" -2
  )
)
keycommand2 $(export key_u) -f .tbz (
  cmdline "tar xvfj $$(cursor | q) -C $$(path -d sdir | q)" -2
)
keycommand2 $(export key_u) -f .tgz (
  cmdline "tar xvfz $$(cursor | q) -C $$(path -d sdir | q)" -2
)
keycommand2 $(export key_u) -f .tlz (
  cmdline "tar xvfa $$(cursor | q) -C $$(path -d sdir | q)" -2
)
keycommand2 $(export key_u) -f .txz (
  cmdline "tar xvfJ $$(cursor | q) -C $$(path -d sdir | q)" -2
)

keycommand2 $(export key_u) -f .7z (
  cmdline "7z x $$(cursor | q) -o$$(path -d sdir | q)" -2
)
keycommand2 $(export key_u) -f .cab (
  cmdline "cabextract -d $$(path -d sdir | q) $$(cursor | q)" -2
)
keycommand2 $(export key_u) -f .deb (
  cmdline "ar x $$(cursor | q)" -2
)
keycommand2 $(export key_u) -f .lzh (
  cmdline "lha xw=$$(path -d sdir | q) $$(cursor | q)" -2
)
keycommand2 $(export key_u) -f .rar (
  cmdline "unrar x $$(cursor | q) $$(path -d sdir | q)" -2
)
keycommand2 $(export key_u) -f .zip (
  cmdline "unzip $$(cursor | q) -d $$(path -d sdir | q)" -2
)




# Menu  #{{{2

keycommand2 $(export key_sharp) ( mmenu sudo )
keycommand2 $(export key_J)     ( mmenu jump )
keycommand2 $(export key_V)     ( mmenu view )
keycommand2 $(export key_a)     ( mmenu attribute )
keycommand2 $(export key_p)     ( mmenu pack )
keycommand2 $(export key_s)     ( mmenu sort_and_mask )




# Mark  #{{{2

keycommand2 $(export key_escape) ( mark -a 0 )
keycommand2 $(export key_ctrl_c) ( mark -a 0 )

keycommand2 $(export key_star) ( mark -t -a )
keycommand2 $(export key_plus) ( cmdline -q "regex_mark ''" -2 )
keycommand2 $(export key_M)    ( cmdline -q "glob_mark *" -1 )

keycommand2 $(export key_key_lbrack) ( cursor_num | global MARK_RANGE_BEGIN )
keycommand2 $(export key_key_rbrack) (
  if(global MARK_RANGE_BEGIN | [ != -1 ]) (
    global MARK_RANGE_BEGIN | var i
    while(var i | [ -le $(cursor_num) ]) (
      mark -t -n $(var i)
      ++ i
    )
  )
)




# Pane  #{{{2

keycommand2 $(export key_O) ( mcd $(path -d sdir) )
keycommand2 $(export key_o) ( mcd -d sdir $(path) )

keycommand2 $(export key_w) (
  path -d adir | var adir
  path -d sdir | var sdir
  mcd -d adir $(var sdir)
  mcd -d sdir $(var adir)
)

keycommand2 $(export key_left) (
  (export VIEW_OPTION | [ = 2pain ] && activate 0) || scroll_left
)
keycommand2 $(export key_right) (
  (export VIEW_OPTION | [ = 2pain ] && activate 1) || scroll_right
)
keycommand2 $(export key_ctrl_b) (
  (export VIEW_OPTION | [ = 2pain ] && activate 0) || scroll_left
)
keycommand2 $(export key_ctrl_f) (
  (export VIEW_OPTION | [ = 2pain ] && activate 1) || scroll_right
)

keycommand2 $(export key_ctrl_t) (
  dir_num | var a
  new_dir ~ -m "^[^\.].*" -dotdir 1
  activate $(var a)
)
keycommand2 $(export key_ctrl_w) (
  dir_num | [ -gt 2 ] && activate $(dir_num | - 1)
  del_dir -d $(dir_num | - 1)
)

keycommand2 $(export key_vbar) (
  if(export VIEW_OPTION | [ = 2pain ]) (
    print 1pain
  ) else (
    print 2pain
  ) | export VIEW_OPTION
)

keycommand2 $(export key_right) (
  (export VIEW_OPTION | [ = 2pain ] && activate 1) || scroll_right
)

keycommand2 $(export key_tab) ( (adir | [ = 0 ] && activate 1 ) || activate 0 )

keycommand2 $(export key_0) ( activate 0 )
keycommand2 $(export key_1) ( activate 1 )
keycommand2 $(export key_2) ( activate 2 )
keycommand2 $(export key_3) ( activate 3 )
keycommand2 $(export key_4) ( activate 4 )
keycommand2 $(export key_5) ( activate 5 )
keycommand2 $(export key_6) ( activate 6 )
keycommand2 $(export key_7) ( activate 7 )
keycommand2 $(export key_8) ( activate 8 )
keycommand2 $(export key_9) ( activate 9 )





# Misc.  #{{{2

keycommand2 $(export key_slash) ( isearch )

keycommand2 $(export key_q) ( mchoise "quit?" yes no | [ = yes ] && quit )

keycommand2 $(export key_ctrl_l) (
  mclear_immediately
  reread -d 0
  reread -d 1
)

keycommand2 $(export key_colon)  ( cmdline )
keycommand2 $(export key_H)      ( external -q $(export SHELL) )

print 0 | global DOT_MASK
def toggle_dotmask (
  if(global DOT_MASK | [ = 0 ]) (
    print 1 | global DOT_MASK
    mask -dotdir 1
    mask -r '^[^.].*'
  ) else (
    print 0 | global DOT_MASK
    mask -dotdir 0
    mask -r '.*'
  )
)

keycommand2 $(export key_dot) ( toggle_dotmask )

keycommand2 $(export key_qmark) ( external -q "$$(export PAGER) $(export MF3DOCDIR)/USAGE.ja.txt" )




# Hooks  #{{{1

print -1 | global MARK_RANGE_BEGIN
def mcd_hook (
  print -1 | global MARK_RANGE_BEGIN
)

def activate_hook (
  true
)

def cursor_move_hook (
  true
)

def cmdline_hook (
  true
)

def atexit_hook (
  save_mfiler3_stat
)




# __END__  #{{{1
# vim: filetype=sh
# vim: expandtab softtabstop=2 shiftwidth=2
# vim: foldmethod=marker
