diff --git a/src/mixer.cc b/src/mixer.cc
index d888ff81..a72f39cf 100644
--- a/src/mixer.cc
+++ b/src/mixer.cc
@@ -48,12 +48,10 @@
 #endif /* __OpenBSD__ */
 #endif /* HAVE_LINUX_SOUNDCARD_H */
 
-#define MIXER_DEV "/dev/mixer"
-
 static int mixer_fd;
 static const char *devs[] = SOUND_DEVICE_NAMES;
 
-int mixer_init(const char *name)
+int mixer_init(const char *name, const char *device)
 {
 	unsigned int i;
 
@@ -61,11 +59,15 @@ int mixer_init(const char *name)
 		name = "vol";
 	}
 
+	if (device == 0 || device[0] == '\0') {
+		device = "/dev/mixer";
+	}
+
 	/* open mixer */
 	if (mixer_fd <= 0) {
-		mixer_fd = open(MIXER_DEV, O_RDONLY);
+		mixer_fd = open(device, O_RDONLY);
 		if (mixer_fd == -1) {
-			NORM_ERR("can't open %s: %s", MIXER_DEV, strerror(errno));
+			NORM_ERR("can't open %s: %s", device, strerror(errno));
 			return -1;
 		}
 	}
@@ -121,7 +123,24 @@ int mixer_is_mute(int i)
 
 void parse_mixer_arg(struct text_object *obj, const char *arg)
 {
-	obj->data.l = mixer_init(arg);
+	char buf1[64], buf2[64], *name, *device;
+	int argc;
+
+	if (arg) {
+		argc = sscanf(arg, "%63s %63s", buf1, buf2);
+
+		switch (argc) {
+			case 1:
+				name = buf1;
+				break;
+			case 2:
+				name = buf1;
+				device = buf2;
+				break;
+		}
+	}
+
+	obj->data.l = mixer_init(name, device);
 }
 
 uint8_t mixer_percentage(struct text_object *obj)
@@ -148,16 +167,27 @@ int check_mixer_muted(struct text_object *obj)
 
 void scan_mixer_bar(struct text_object *obj, const char *arg)
 {
-	char buf1[64];
-	int n;
-
-	if (arg && sscanf(arg, "%63s %n", buf1, &n) >= 1) {
-		obj->data.i = mixer_init(buf1);
-		scan_bar(obj, arg + n, 100);
-	} else {
-		obj->data.i = mixer_init(NULL);
-		scan_bar(obj, arg, 100);
+	char buf1[64], buf2[64], *name, *device;
+	const char *bar_arg;
+	int argc, n;
+
+	if (arg) {
+		argc = sscanf(arg, "%63s %63s %n", buf1, buf2, &n);
+
+		switch (argc) {
+			case 1:
+				name = buf1;
+				break;
+			case 2:
+				name = buf1;
+				device = buf2;
+				bar_arg = arg + n;
+				break;
+		}
 	}
+
+	obj->data.i = mixer_init(name, device);
+	scan_bar(obj, bar_arg, 100);
 }
 
 double mixer_barval(struct text_object *obj)
