
diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index a9d6dbf..91fc4d3 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -112,6 +112,28 @@ static const WCHAR clip_window_prop[] =
 
 static pthread_mutex_t win_data_mutex = PTHREAD_MUTEX_INITIALIZER;
 
+/* an individual systray icon, unpacked from the NOTIFYICONDATA and always in unicode */
+struct icon
+{
+    struct list    entry;
+    HICON          image;    /* the image to render */
+    HWND           owner;    /* the HWND passed in to the Shell_NotifyIcon call */
+    HWND           window;   /* the adaptor window */
+    BOOL           layered;  /* whether we are using a layered window */
+    HWND           tooltip;  /* Icon tooltip */
+    UINT           state;    /* state flags */
+    UINT           id;       /* the unique id given by the app */
+    UINT           callback_message;
+    int            display;  /* index in display list, or -1 if hidden */
+    WCHAR          tiptext[128]; /* Tooltip text. If empty => tooltip disabled */
+    WCHAR          info_text[256];  /* info balloon text */
+    WCHAR          info_title[64];  /* info balloon title */
+    UINT           info_flags;      /* flags for info balloon */
+    UINT           info_timeout;    /* timeout for info balloon */
+    HICON          info_icon;       /* info balloon icon */
+    UINT           version;         /* notify icon api version */
+};
+
 
 /***********************************************************************
  * http://standards.freedesktop.org/startup-notification-spec
@@ -2324,6 +2346,7 @@ BOOL X11DRV_SystrayDockInsert( HWND hwnd, UINT cx, UINT cy, void *icon )
     XEvent ev;
     XVisualInfo visual;
     struct x11drv_win_data *data;
+    UNICODE_STRING window_title;
 
     if (!(systray_window = get_systray_selection_owner( display ))) return FALSE;
 
@@ -2335,6 +2358,9 @@ BOOL X11DRV_SystrayDockInsert( HWND hwnd, UINT cx, UINT cy, void *icon )
     window = data->whole_window;
     release_win_data( data );
 
+    RtlInitUnicodeString( &window_title, ((struct icon *) icon)->tiptext );
+    sync_window_text( data->display, data->whole_window, &window_title );
+
     NtUserShowWindow( hwnd, SW_SHOWNA );
 
     TRACE_(systray)( "icon window %p/%lx\n", hwnd, window );
diff --git a/programs/explorer/systray.c b/programs/explorer/systray.c
index b012d3f..d7883f2 100644
--- a/programs/explorer/systray.c
+++ b/programs/explorer/systray.c
@@ -567,6 +567,7 @@ static void systray_add_icon( struct icon *icon )
     SetParent( icon->window, tray_window );
     pos = get_icon_pos( icon );
     SetWindowPos( icon->window, 0, pos.x, pos.y, 0, 0, SWP_NOSIZE | SWP_NOACTIVATE | SWP_NOZORDER | SWP_SHOWWINDOW );
+    SetWindowTextW( icon->window, icon->tiptext );
 
     if (nb_displayed == 1 && show_systray) do_show_systray();
     TRACE( "added %u now %d icons\n", icon->id, nb_displayed );
@@ -680,6 +681,7 @@ static BOOL modify_icon( struct icon *icon, NOTIFYICONDATAW *nid )
     {
         lstrcpynW( icon->tiptext, nid->szTip, ARRAY_SIZE( icon->tiptext ));
         update_tooltip_text( icon );
+        SetWindowTextW( icon->window, icon->tiptext );
     }
     if (nid->uFlags & NIF_INFO && nid->cbSize >= NOTIFYICONDATAA_V2_SIZE)
     {
