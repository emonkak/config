diff --git a/src/mbyte.c b/src/mbyte.c
index 34592bd56..18f2a2bd7 100644
--- a/src/mbyte.c
+++ b/src/mbyte.c
@@ -1592,9 +1592,6 @@ utf_char2cells(int c)
     // Use the value from setcellwidths() at 0x80 and higher, unless the
     // character is not printable.
     if (c >= 0x80 &&
-# ifdef USE_WCHAR_FUNCTIONS
-	    wcwidth(c) >= 1 &&
-# endif
 	    vim_isprintc(c))
     {
 	int n = cw_value(c);
@@ -1605,7 +1602,9 @@ utf_char2cells(int c)
 
     if (c >= 0x100)
     {
-#ifdef USE_WCHAR_FUNCTIONS
+	if (!utf_printable(c))
+	    return 6;		// unprintable, displays <xxxx>
+#if 1
 	int	n;
 
 	/*
@@ -1619,13 +1618,11 @@ utf_char2cells(int c)
 	if (n > 1)
 	    return n;
 #else
-	if (!utf_printable(c))
-	    return 6;		// unprintable, displays <xxxx>
 	if (intable(doublewidth, sizeof(doublewidth), c))
 	    return 2;
-#endif
 	if (p_emoji && intable(emoji_wide, sizeof(emoji_wide), c))
 	    return 2;
+#endif
     }
 
     // Characters below 0x100 are influenced by 'isprint' option
@@ -2688,12 +2685,6 @@ utf_iscomposing(int c)
     int
 utf_printable(int c)
 {
-#ifdef USE_WCHAR_FUNCTIONS
-    /*
-     * Assume the iswprint() library function works better than our own stuff.
-     */
-    return iswprint(c);
-#else
     // Sorted list of non-overlapping intervals.
     // 0xd800-0xdfff is reserved for UTF-16, actually illegal.
     static struct interval nonprint[] =
@@ -2704,7 +2695,6 @@ utf_printable(int c)
     };
 
     return !intable(nonprint, sizeof(nonprint), c);
-#endif
 }
 
 // Sorted list of non-overlapping intervals of all Emoji characters,
