diff --git a/src/nvim/mbyte.c b/src/nvim/mbyte.c
index a345795bb..9cea06132 100644
--- a/src/nvim/mbyte.c
+++ b/src/nvim/mbyte.c
@@ -33,6 +33,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <uv.h>
+#include <wchar.h>
 #include <wctype.h>
 
 #include "auto/config.h"
@@ -483,6 +484,19 @@ int utf_char2cells(int c)
     return 1;
   }
 
+#if 1
+  int n = wcwidth((wchar_t)c);
+  if (n <= 0) {
+    return c > 0xFF ? 6 : 4;
+  }
+
+  int m = cw_value(c);
+  if (m != 0) {
+    return m;
+  }
+
+  return n;
+#else
   if (!vim_isprintc(c)) {
     assert(c <= 0xFFFF);
     // unprintable is displayed either as <xx> or <xxxx>
@@ -505,6 +519,7 @@ int utf_char2cells(int c)
   }
 
   return 1;
+#endif
 }
 
 /// Return the number of display cells character at "*p" occupies.
@@ -1091,6 +1106,18 @@ bool utf_iscomposing(int c)
   return intable(combining, ARRAY_SIZE(combining), c);
 }
 
+#if 1
+
+// Return true for characters that can be displayed in a normal way.
+// Only for characters of 0x100 and above!
+bool utf_printable(int c)
+  FUNC_ATTR_PURE
+{
+  return wcwidth((wchar_t)c) > 0;
+}
+
+#else
+
 #ifdef __SSE2__
 
 # include <emmintrin.h>
@@ -1151,6 +1178,8 @@ bool utf_printable(int c)
 
 #endif
 
+#endif
+
 // Get class of a Unicode character.
 // 0: white space
 // 1: punctuation
